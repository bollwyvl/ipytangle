// Generated by CoffeeScript 1.9.2
(function() {
  var lib;

  lib = function(path) {
    return "/nbextensions/ipytangle/lib/" + path;
  };

  require.config({
    paths: {
      d3: lib("d3/d3")
    }
  });

  define(["d3", "jquery", "notebook/js/celltoolbar", "base/js/namespace"], function(d3, $, arg, arg1) {
    var CellToolbar, ifCell, keyboard_manager;
    CellToolbar = arg.CellToolbar;
    keyboard_manager = arg1.keyboard_manager;
    ifCell = function(div, cell) {
      var group, input, val;
      div = d3.select(div[0]).style({
        height: null,
        padding: 0
      });
      val = function(val) {
        var md, ref;
        if (!arguments.length) {
          return (ref = cell.metadata.tangle) != null ? ref.showIf : void 0;
        } else {
          if (!(md = cell.metadata.tangle)) {
            md = cell.metadata.tangle = {};
          }
          return md.showIf = val;
        }
      };
      group = div.append("div").classed({
        "form-inline": 1
      }).append("div").classed({
        "tangle-cell-showif": 1,
        "form-group": 1
      });
      group.append("label").text("Show if");
      input = group.append("input").classed({
        "form-control": 1,
        "input-xs": 1
      }).style({
        height: "20px",
        width: "300px"
      }).attr({
        placeholder: "always",
        value: val()
      }).on("input", function() {
        return val(this.value);
      });
      return keyboard_manager.register_events($(input.node()));
    };
    return {
      register: function(notebook) {
        CellToolbar.register_callback('tangle.if', ifCell);
        return CellToolbar.register_preset('Tangle', ["tangle.if"], notebook);
      }
    };
  });

}).call(this);
