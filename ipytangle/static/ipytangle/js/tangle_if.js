// Generated by CoffeeScript 1.9.2
(function() {
  define([], function() {
    return function(view) {
      this.register("if", {
        init: (function(_this) {
          return function(field) {
            return field.classed("tangle_if", 1).style({
              display: "none"
            });
          };
        })(this),
        update: (function(_this) {
          return function(field) {
            return field.each(function(d) {
              var change, el;
              el = d3.select(this);
              change = function() {
                var current, poppers, prev, pushers, results, show, shown;
                pushers = ["tangle_if", "tangle_else", "tangle_elsif"];
                poppers = ["tangle_endif", "tangle_else", "tangle_elsif"];
                current = el;
                shown = false;
                show = false;
                results = [];
                while (!current.classed("tangle_endif")) {
                  if (current === el) {
                    show = "true" === d.template(view.context());
                  } else if (current.classed("tangle_elsif")) {
                    show = "true" === current.datum().template(view.context());
                  } else if (current.classed("tangle_else")) {
                    show = !shown;
                  }
                  prev = current;
                  current = view.stackMatch(prev, pushers, poppers);
                  view.toggleRange(prev, current, shown ? false : show);
                  results.push(shown = shown || show);
                }
                return results;
              };
              view.listenTo(view.model, "change", change);
              change();
              return change();
            });
          };
        })(this)
      });
      this.register("elsif", {
        init: (function(_this) {
          return function(field) {
            return field.classed("tangle_elsif", 1).style({
              display: "none"
            });
          };
        })(this)
      });
      this.register("else", {
        init: (function(_this) {
          return function(field) {
            return field.classed("tangle_else", 1).style({
              display: "none"
            });
          };
        })(this)
      });
      return this.register("endif", {
        init: (function(_this) {
          return function(field) {
            return field.classed("tangle_endif", 1).style({
              display: "none"
            });
          };
        })(this)
      });
    };
  });

}).call(this);
